// This file will be generated by Supabase CLI.
// For now, we'll define a minimal type to avoid errors.
// In a real project, you would run `supabase gen types typescript --project-id "your-project-ref"`
// and copy the output here.

export type Database = {
  public: {
    Tables: {
      scam_reports: {
        Row: {
          id: string
          title: string
          company: string | null
          scam_type: string
          industry: string | null
          location: string | null
          city: string | null
          state: string | null
          country: string | null
          lat: number | null
          lng: number | null
          description: string
          tags: string[] | null
          anonymous: boolean | null
          email: string | null
          status: string
          created_at: string
          helpful_votes: number
          flag_count: number
          views: number
          risk_level: string
          trust_score: number
        }
        Insert: {
          id?: string
          title: string
          company?: string | null
          scam_type: string
          industry?: string | null
          location?: string | null
          city?: string | null
          state?: string | null
          country?: string | null
          lat?: number | null
          lng?: number | null
          description: string
          tags?: string[] | null
          anonymous?: boolean | null
          email?: string | null
          status?: string
          created_at?: string
          helpful_votes?: number
          flag_count?: number
          views?: number
          risk_level: string
          trust_score?: number
        }
        Update: {
          id?: string
          title?: string
          company?: string | null
          scam_type?: string
          industry?: string | null
          location?: string | null
          city?: string | null
          state?: string | null
          country?: string | null
          lat?: number | null
          lng?: number | null
          description?: string
          tags?: string[] | null
          anonymous?: boolean | null
          email?: string | null
          status?: string
          created_at?: string
          helpful_votes?: number
          flag_count?: number
          views?: number
          risk_level?: string
          trust_score?: number
        }
      }
      safe_companies: {
        // NEW TABLE DEFINITION
        Row: {
          id: string
          name: string
          industry: string
          description: string
          website: string | null
          verified_score: number
          tags: string[] | null
          created_at: string
          created_by: string | null
          status: string
        }
        Insert: {
          id?: string
          name: string
          industry: string
          description: string
          website?: string | null
          verified_score?: number
          tags?: string[] | null
          created_at?: string
          created_by?: string | null
          status?: string
        }
        Update: {
          id?: string
          name?: string
          industry?: string
          description?: string
          website?: string | null
          verified_score?: number
          tags?: string[] | null
          created_at?: string
          created_by?: string | null
          status?: string
        }
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      increment_flag_count: {
        Args: { report_id: string }
        Returns: void
      }
      increment_helpful_votes: {
        Args: { report_id: string }
        Returns: void
      }
      increment_views: {
        Args: { report_id: string }
        Returns: void
      }
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
